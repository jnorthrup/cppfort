
#include <iostream>
#include <vector>
#include <string>

main: () -> int = {
    cpp2::null_safety.set_handler(call_my_framework&);
    try_pointer_stuff();
    std::cout << "done\n";
}

//  Calling Cpp1 is the easiest way to create a null...
auto null_from_cpp1() -> int* { return nullptr; }

try_pointer_stuff: () = {
    p: *int = null_from_cpp1();
    p* = 42;    // deliberate null dereference
                // to show -n
}

auto call_my_framework(const char* msg CPP2_SOURCE_LOCATION_PARAM) {
    std::cout
        << "sending error to my framework... ["
        << msg 
        << "]\n";
    auto loc = CPP2_SOURCE_LOCATION_VALUE;
    if (!loc.empty()) {
        std::cout
            << "from source location: "
            << loc
            << "\n";
    }
    exit(0);
}
