Regression test log - Fri Sep 12 22:06:47 CDT 2025
Using cppfront: ../../stage0_clean/cppfront
Testing mixed-allcpp1-hello.cpp2
mixed-allcpp1-hello.cpp2... ok (all Cpp1)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-as-for-variant-20-types.cpp2
mixed-as-for-variant-20-types.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-bounds-check.cpp2
mixed-bounds-check.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing mixed-bounds-safety-with-assert-2.cpp2
mixed-bounds-safety-with-assert-2.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-bounds-safety-with-assert.cpp2
mixed-bounds-safety-with-assert.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing mixed-bugfix-for-cpp2-comment-cpp1-sequence.cpp2
mixed-bugfix-for-cpp2-comment-cpp1-sequence.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-bugfix-for-double-pound-else-error.cpp2
mixed-bugfix-for-double-pound-else-error.cpp2...
mixed-bugfix-for-double-pound-else-error.cpp2(2,1): error: #else does not match a prior #if
mixed-bugfix-for-double-pound-else-error.cpp2(3,1): error: #else does not match a prior #if
mixed-bugfix-for-double-pound-else-error.cpp2(3,1): error: #else already encountered for this #if

  Transpile FAILED

Testing mixed-bugfix-for-literal-as-nttp.cpp2
mixed-bugfix-for-literal-as-nttp.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-bugfix-for-ufcs-non-local.cpp2
mixed-bugfix-for-ufcs-non-local.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-captures-in-expressions-and-postconditions.cpp2
mixed-captures-in-expressions-and-postconditions.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-default-arguments.cpp2
mixed-default-arguments.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-fixed-type-aliases.cpp2
mixed-fixed-type-aliases.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-float-literals.cpp2
mixed-float-literals.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-forwarding.cpp2
mixed-forwarding.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-function-expression-and-std-for-each.cpp2
mixed-function-expression-and-std-for-each.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-function-expression-and-std-ranges-for-each-with-capture.cpp2
mixed-function-expression-and-std-ranges-for-each-with-capture.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-function-expression-and-std-ranges-for-each.cpp2
mixed-function-expression-and-std-ranges-for-each.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-function-expression-with-pointer-capture.cpp2
mixed-function-expression-with-pointer-capture.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-function-expression-with-repeated-capture.cpp2
mixed-function-expression-with-repeated-capture.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-hello.cpp2
mixed-hello.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-increment-decrement.cpp2
mixed-increment-decrement.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-initialization-safety-1-error.cpp2
mixed-initialization-safety-1-error.cpp2...
mixed-initialization-safety-1-error.cpp2(30,21): error: local variable x is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing mixed-initialization-safety-2-error.cpp2
mixed-initialization-safety-2-error.cpp2...
mixed-initialization-safety-2-error.cpp2(21,5): error: local variable x must be initialized on both branches or neither branch
mixed-initialization-safety-2-error.cpp2(23,5): error: "if" initializes x on:
  branch starting at line 23
but not on:
  branch starting at line 26
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing mixed-initialization-safety-3-contract-violation.cpp2
mixed-initialization-safety-3-contract-violation.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing mixed-initialization-safety-3.cpp2
mixed-initialization-safety-3.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-inspect-templates.cpp2
mixed-inspect-templates.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-inspect-values-2.cpp2
mixed-inspect-values-2.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-inspect-values.cpp2
mixed-inspect-values.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-inspect-with-typeof-of-template-arg-list.cpp2
mixed-inspect-with-typeof-of-template-arg-list.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 3)

Testing mixed-intro-example-three-loops.cpp2
mixed-intro-example-three-loops.cpp2... ok (all Cpp1)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-intro-for-with-counter-include-last.cpp2
mixed-intro-for-with-counter-include-last.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-is-as-value-with-variant.cpp2
mixed-is-as-value-with-variant.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-is-as-variant.cpp2
mixed-is-as-variant.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-lifetime-safety-and-null-contracts.cpp2
mixed-lifetime-safety-and-null-contracts.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-lifetime-safety-pointer-init-1-error.cpp2
mixed-lifetime-safety-pointer-init-1-error.cpp2...
mixed-lifetime-safety-pointer-init-1-error.cpp2(17,25): error: local variable p is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing mixed-lifetime-safety-pointer-init-2-error.cpp2
mixed-lifetime-safety-pointer-init-2-error.cpp2...
mixed-lifetime-safety-pointer-init-2-error.cpp2(7,5): error: local variable p must be initialized on both branches or neither branch
mixed-lifetime-safety-pointer-init-2-error.cpp2(10,5): error: "if" initializes p on:
  branch starting at line 13
but not on:
  branch starting at line 10
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing mixed-lifetime-safety-pointer-init-3-error.cpp2
mixed-lifetime-safety-pointer-init-3-error.cpp2...
mixed-lifetime-safety-pointer-init-3-error.cpp2(11,11): error: = - pointer assignment from null or integer is illegal
  ==> program violates lifetime safety guarantee - see previous errors

  Transpile FAILED

Testing mixed-lifetime-safety-pointer-init-4.cpp2
mixed-lifetime-safety-pointer-init-4.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-multiple-return-values.cpp2
mixed-multiple-return-values.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-out-destruction.cpp2
mixed-out-destruction.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-parameter-passing-generic-out.cpp2
mixed-parameter-passing-generic-out.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-parameter-passing-with-forward.cpp2
mixed-parameter-passing-with-forward.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-parameter-passing.cpp2
mixed-parameter-passing.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-postexpression-with-capture.cpp2
mixed-postexpression-with-capture.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-postfix-expression-custom-formatting.cpp2
mixed-postfix-expression-custom-formatting.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-string-interpolation.cpp2
mixed-string-interpolation.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-test-parens.cpp2
mixed-test-parens.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-type-safety-1.cpp2
mixed-type-safety-1.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing mixed-ufcs-multiple-template-arguments.cpp2
mixed-ufcs-multiple-template-arguments.cpp2... ok (mixed Cpp1/Cpp2, Cpp2 code passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-assert-expected-not-null.cpp2
pure2-assert-expected-not-null.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-assert-expected-not-null.cpp2:7:10: error: no member named 'expected' in namespace 'std'
    7 |     std::expected<int,bool> ex {4}; 
      |     ~~~~~^
pure2-assert-expected-not-null.cpp2:7:22: error: expected '(' for function-style cast or type construction
    7 |     std::expected<int,bool> ex {4}; 
      |                   ~~~^
pure2-assert-expected-not-null.cpp2:9:193: error: use of undeclared identifier 'ex'
    9 |     return *cpp2::impl::assert_not_null(cpp2::move(up)) + *cpp2::impl::assert_not_null(cpp2::move(sp)) + *cpp2::impl::assert_not_null(cpp2::move(op)) + *cpp2::impl::assert_not_null(cpp2::move(ex)); 
      |                                                                                                                                                                                                 ^
pure2-assert-expected-not-null.cpp2:14:10: error: no member named 'expected' in namespace 'std'
   14 |     std::expected<int,bool> ex {std::unexpected(false)}; 
      |     ~~~~~^
pure2-assert-expected-not-null.cpp2:14:22: error: expected '(' for function-style cast or type construction
   14 |     std::expected<int,bool> ex {std::unexpected(false)}; 
      |                   ~~~^
pure2-assert-expected-not-null.cpp2:15:52: error: use of undeclared identifier 'ex'
   15 |     return *cpp2::impl::assert_not_null(cpp2::move(ex)); 
      |                                                    ^
6 errors generated.
  Compile FAILED

Testing pure2-assert-optional-not-null.cpp2
pure2-assert-optional-not-null.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing pure2-assert-shared-ptr-not-null.cpp2
pure2-assert-shared-ptr-not-null.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing pure2-assert-unique-ptr-not-null.cpp2
pure2-assert-unique-ptr-not-null.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run FAILED (exit code 1)

Testing pure2-bounds-safety-pointer-arithmetic-error.cpp2
pure2-bounds-safety-pointer-arithmetic-error.cpp2...
pure2-bounds-safety-pointer-arithmetic-error.cpp2(15,13): error: 'delete' and owning raw pointers are not supported in Cpp2 - use unique.new<T> or shared.new<T> instead in that order (or, in the future, gc.new<T>, but that is not yet implemented)

  Transpile FAILED

Testing pure2-bounds-safety-span.cpp2
pure2-bounds-safety-span.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-break-continue.cpp2
pure2-break-continue.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-assert-capture-error.cpp2
pure2-bugfix-for-assert-capture-error.cpp2...
pure2-bugfix-for-assert-capture-error.cpp2(2,29): error: $ (capture) cannot appear here - it must appear in an anonymous expression function, a postcondition, or an interpolated string literal (at '$')
pure2-bugfix-for-assert-capture-error.cpp2(2,23): error: expected ')' at the end of the contract (at '==')

  Transpile FAILED

Testing pure2-bugfix-for-assign-expression-list.cpp2
pure2-bugfix-for-assign-expression-list.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-bad-capture-error.cpp2
pure2-bugfix-for-bad-capture-error.cpp2...
pure2-bugfix-for-bad-capture-error.cpp2(2,29): error: $ (capture) cannot appear here - it must appear in an anonymous expression function, a postcondition, or an interpolated string literal (at '$')
pure2-bugfix-for-bad-capture-error.cpp2(2,23): error: expected ')' at the end of the contract (at '==')

  Transpile FAILED

Testing pure2-bugfix-for-bad-decltype-error.cpp2
pure2-bugfix-for-bad-decltype-error.cpp2...
pure2-bugfix-for-bad-decltype-error.cpp2(3,14): error: 'decltype' must be followed by a single parenthesized expression
pure2-bugfix-for-bad-decltype-error.cpp2(3,24): error: 'is' must be followed by a type-id or an expression
pure2-bugfix-for-bad-decltype-error.cpp2(3,14): error: 'decltype' must be followed by a single parenthesized expression
pure2-bugfix-for-bad-decltype-error.cpp2(3,24): error: 'is' must be followed by a type-id or an expression

  Transpile FAILED

Testing pure2-bugfix-for-bad-parameter-error.cpp2
pure2-bugfix-for-bad-parameter-error.cpp2...
pure2-bugfix-for-bad-parameter-error.cpp2(1,50): error: parameter must be initialized with an expression (at ')')

  Transpile FAILED

Testing pure2-bugfix-for-bad-using-error.cpp2
pure2-bugfix-for-bad-using-error.cpp2...
pure2-bugfix-for-bad-using-error.cpp2(3,1): error: expected valid id-expression after 'using' (at '}')

  Transpile FAILED

Testing pure2-bugfix-for-declaration-equal-error.cpp2
pure2-bugfix-for-declaration-equal-error.cpp2...
pure2-bugfix-for-declaration-equal-error.cpp2(1,10): error: expected '=' before '{' - did you mean '= {' ? (at '{')
pure2-bugfix-for-declaration-equal-error.cpp2(1,1): error: unexpected text at end of Cpp2 code section (at 'main')
pure2-bugfix-for-declaration-equal-error.cpp2(1,0): error: parse failed for section starting here

  Transpile FAILED

Testing pure2-bugfix-for-discard-precedence.cpp2
pure2-bugfix-for-discard-precedence.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-functions-before-superclasses-error.cpp2
pure2-bugfix-for-functions-before-superclasses-error.cpp2...
pure2-bugfix-for-functions-before-superclasses-error.cpp2(7,3): error: a type cannot declare a parent after defining a function

  Transpile FAILED

Testing pure2-bugfix-for-indexed-call.cpp2
pure2-bugfix-for-indexed-call.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-invalid-alias-error.cpp2
pure2-bugfix-for-invalid-alias-error.cpp2...
pure2-bugfix-for-invalid-alias-error.cpp2(2,25): error: invalid alias declaration - expected 'type', 'namespace', or a type-id after ':'

  Transpile FAILED

Testing pure2-bugfix-for-late-comments.cpp2
pure2-bugfix-for-late-comments.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-max-munch.cpp2
pure2-bugfix-for-max-munch.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-memberwise-base-assignment.cpp2
pure2-bugfix-for-memberwise-base-assignment.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-naked-unsigned-char-error.cpp2
pure2-bugfix-for-naked-unsigned-char-error.cpp2...
pure2-bugfix-for-naked-unsigned-char-error.cpp2(2,8): error: 'unsigned char' - did you mean 'u8' (usually best) or 'cpp2::_uchar'?
pure2-bugfix-for-naked-unsigned-char-error.cpp2(2,8): error: 'unsigned char' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"

  Transpile FAILED

Testing pure2-bugfix-for-name-lookup-and-value-decoration.cpp2
pure2-bugfix-for-name-lookup-and-value-decoration.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-namespace-error.cpp2
pure2-bugfix-for-namespace-error.cpp2...
pure2-bugfix-for-namespace-error.cpp2(2,22): error: types cannot contain namespaces (at 'namespace')

  Transpile FAILED

Testing pure2-bugfix-for-non-local-function-expression.cpp2
pure2-bugfix-for-non-local-function-expression.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-non-local-initialization.cpp2
pure2-bugfix-for-non-local-initialization.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-optional-template-argument-list.cpp2
pure2-bugfix-for-optional-template-argument-list.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-out-this-nonconstructor-error.cpp2
pure2-bugfix-for-out-this-nonconstructor-error.cpp2...
pure2-bugfix-for-out-this-nonconstructor-error.cpp2(3,16): error: a function with an 'out this' parameter must be a constructor

  Transpile FAILED

Testing pure2-bugfix-for-requires-clause-in-forward-declaration.cpp2
pure2-bugfix-for-requires-clause-in-forward-declaration.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-requires-clause-unbraced-function-initializer.cpp2
pure2-bugfix-for-requires-clause-unbraced-function-initializer.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-template-argument.cpp2
pure2-bugfix-for-template-argument.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-ufcs-arguments.cpp2
pure2-bugfix-for-ufcs-arguments.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-ufcs-name-lookup.cpp2
pure2-bugfix-for-ufcs-name-lookup.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-ufcs-noexcept.cpp2
pure2-bugfix-for-ufcs-noexcept.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-ufcs-sfinae.cpp2
pure2-bugfix-for-ufcs-sfinae.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-unbraced-function-expression.cpp2
pure2-bugfix-for-unbraced-function-expression.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-bugfix-for-variable-template.cpp2
pure2-bugfix-for-variable-template.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-chained-comparisons.cpp2
pure2-chained-comparisons.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-concept-definition.cpp2
pure2-concept-definition.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-contracts.cpp2
pure2-contracts.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-cpp1-multitoken-fundamental-types-error.cpp2
pure2-cpp1-multitoken-fundamental-types-error.cpp2...
pure2-cpp1-multitoken-fundamental-types-error.cpp2(3,8): error: 'signed short int' - did you mean 'short'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(3,8): error: 'signed short int' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(4,8): error: 'short int signed' - did you mean 'short'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(4,8): error: 'short int signed' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(5,8): error: 'long long unsigned int' - did you mean 'ulonglong'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(5,8): error: 'long long unsigned int' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(6,8): error: 'long double' - did you mean 'long'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(6,8): error: 'long double' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"
pure2-cpp1-multitoken-fundamental-types-error.cpp2(7,8): error: 'unsigned char' - did you mean 'u8' (usually best) or 'cpp2::_uchar'?
pure2-cpp1-multitoken-fundamental-types-error.cpp2(7,8): error: 'unsigned char' is an old-style C/C++ multi-word keyword type
    - most such types should be used only for interoperability with older code
    - using those when you need them is fine, but name them with these short names instead:
        short, ushort, int, uint, long, ulong, longlong, ulonglong, longdouble, _schar, _uchar
    - see also cpp2util.h > "Convenience names for integer types"

  Transpile FAILED

Testing pure2-cpp1-prefix-expression-error.cpp2
pure2-cpp1-prefix-expression-error.cpp2...
pure2-cpp1-prefix-expression-error.cpp2(4,10): error: prefix '&var' address-of is not valid Cpp2; use postfix 'var&' instead

  Transpile FAILED

Testing pure2-deducing-pointers-error.cpp2
pure2-deducing-pointers-error.cpp2...
pure2-deducing-pointers-error.cpp2(14,8): error: = - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(17,9): error: = - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(20,9): error: = - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(21,9): error: += - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(25,9): error: = - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(29,9): error: = - pointer assignment from null or integer is illegal
pure2-deducing-pointers-error.cpp2(31,11): error: ++ - pointer arithmetic is illegal - use std::span or gsl::span instead
pure2-deducing-pointers-error.cpp2(33,8): error: = - pointer assignment from null or integer is illegal
  ==> program violates lifetime safety guarantee - see previous errors
  ==> program violates bounds safety guarantee - see previous errors

  Transpile FAILED

Testing pure2-deduction-1-error.cpp2
pure2-deduction-1-error.cpp2...
pure2-deduction-1-error.cpp2(1,10): error: decltype(auto) is not needed in Cpp2 - for return types, use '-> forward _' instead

  Transpile FAILED

Testing pure2-deduction-2-error.cpp2
pure2-deduction-2-error.cpp2...
pure2-deduction-2-error.cpp2(1,4): error: decltype(auto) is not needed in Cpp2 - for return types, use '-> forward _' instead

  Transpile FAILED

Testing pure2-default-arguments.cpp2
pure2-default-arguments.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-defaulted-comparisons-and-final-types.cpp2
pure2-defaulted-comparisons-and-final-types.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-enum.cpp2
pure2-enum.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-expected-is-as.cpp2
pure2-expected-is-as.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-expected-is-as.cpp2:7:10: error: no member named 'expected' in namespace 'std'
    7 |     std::expected<int,int> ex1 {123}; 
      |     ~~~~~^
pure2-expected-is-as.cpp2:7:22: error: expected '(' for function-style cast or type construction
    7 |     std::expected<int,int> ex1 {123}; 
      |                   ~~~^
pure2-expected-is-as.cpp2:8:10: error: no member named 'expected' in namespace 'std'
    8 |     std::expected<int,int> ex2 {std::unexpected(-1)}; 
      |     ~~~~~^
pure2-expected-is-as.cpp2:8:22: error: expected '(' for function-style cast or type construction
    8 |     std::expected<int,int> ex2 {std::unexpected(-1)}; 
      |                   ~~~^
pure2-expected-is-as.cpp2:9:10: error: no member named 'expected' in namespace 'std'
    9 |     std::expected<std::string,size_t> ex3 {"Expect the unexpected"}; 
      |     ~~~~~^
pure2-expected-is-as.cpp2:9:30: error: expected '(' for function-style cast or type construction
    9 |     std::expected<std::string,size_t> ex3 {"Expect the unexpected"}; 
      |                   ~~~~~~~~~~~^
pure2-expected-is-as.cpp2:11:29: error: use of undeclared identifier 'ex1'
   11 |     if (cpp2::impl::is<int>(ex1)) {
      |                             ^
pure2-expected-is-as.cpp2:15:30: error: use of undeclared identifier 'ex1'
   15 |     if (cpp2::impl::is<bool>(ex1)) {
      |                              ^
pure2-expected-is-as.cpp2:20:30: error: use of undeclared identifier 'ex1'
   20 |     if (cpp2::impl::is<void>(ex1)) {
      |                              ^
pure2-expected-is-as.cpp2:25:29: error: no member named 'unexpected' in namespace 'std'
   25 |     if (cpp2::impl::is<std::unexpected<int>>(ex1)) {
      |                        ~~~~~^
pure2-expected-is-as.cpp2:25:43: error: expected '(' for function-style cast or type construction
   25 |     if (cpp2::impl::is<std::unexpected<int>>(ex1)) {
      |                                        ~~~^
pure2-expected-is-as.cpp2:25:46: error: use of undeclared identifier 'ex1'; did you mean 'exp'?
   25 |     if (cpp2::impl::is<std::unexpected<int>>(ex1)) {
      |                                              ^~~
      |                                              exp
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/c++/v1/math.h:458:20: note: 'exp' declared here
  458 | using std::__math::exp;
      |                    ^
pure2-expected-is-as.cpp2:30:24: error: use of undeclared identifier 'ex1'
   30 |     if (cpp2::impl::is(ex1, 123)) {
      |                        ^
pure2-expected-is-as.cpp2:34:24: error: use of undeclared identifier 'ex1'
   34 |     if (cpp2::impl::is(ex1, 100)) {
      |                        ^
pure2-expected-is-as.cpp2:39:37: error: use of undeclared identifier 'ex1'
   39 |     auto val1 {cpp2::impl::as_<int>(ex1)}; 
      |                                     ^
pure2-expected-is-as.cpp2:42:29: error: use of undeclared identifier 'ex2'
   42 |     if (cpp2::impl::is<int>(ex2)) {
      |                             ^
pure2-expected-is-as.cpp2:47:30: error: use of undeclared identifier 'ex2'
   47 |     if (cpp2::impl::is<bool>(ex2)) {
      |                              ^
pure2-expected-is-as.cpp2:52:24: error: use of undeclared identifier 'ex2'
   52 |     if (cpp2::impl::is(ex2, 123)) {
      |                        ^
pure2-expected-is-as.cpp2:57:29: error: no member named 'unexpected' in namespace 'std'
   57 |     if (cpp2::impl::is<std::unexpected<int>>(ex2)) {
      |                        ~~~~~^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
  Compile FAILED

Testing pure2-for-loop-range-with-lambda.cpp2
pure2-for-loop-range-with-lambda.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-forward-return-diagnostics-error.cpp2
pure2-forward-return-diagnostics-error.cpp2...
pure2-forward-return-diagnostics-error.cpp2(1,48): error: a 'forward' return type cannot return a local variable

  Transpile FAILED

Testing pure2-forward-return.cpp2
pure2-forward-return.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-function-body-reflection.cpp2
pure2-function-body-reflection.cpp2...Type: test
  is a member of namespace ns which contains the following names:
    sample_function_before_type
  Declaration: one_liner
      Function: one_liner
        Parameters:
          parameter:
            passing style: in
            declaration:
              Object: name a, type double
          parameter:
            passing style: in
            declaration:
              Object: name b, type double
          parameter:
            passing style: in
            declaration:
              Object: name c, type double
        Body:
          multiplicative
            term:
                (
                  additive
                    term:
                        a
                    op: +
                    term:
                        c
                )
            op: *
            term:
                b
  Declaration: return_list
      Function: return_list
        Returns:
          parameter:
            passing style: out
            declaration:
              Object: name r, type double
          parameter:
            passing style: out
            declaration:
              Object: name s, type float
          parameter:
            passing style: out
            declaration:
              Object: name t, type std::string
        Body:
          compound statement
            assignment
              term:
                  r
              op: =
              term:
                  42.0
            assignment
              term:
                  s
              op: =
              term:
                  2.71828f
            assignment
              term:
                  t
              op: =
              term:
                  "e times pi"
              return statement
  Declaration: branches
      Function: branches
        Parameters:
          parameter:
            passing style: in
            declaration:
              Object: name a, type double
          parameter:
            passing style: in
            declaration:
              Object: name b, type double
          parameter:
            passing style: in
            declaration:
              Object: name c, type double
        Returns:
          parameter:
            passing style: out
            declaration:
              Object: name r, type double
                Initializer:
                    3.14159
        Body:
          compound statement
            if statement
              condition:
                  true
              true branch:
                compound statement
                  assignment
                    term:
                        r
                    op: =
                    term:
                      additive
                        term:
                            r
                        op: +
                        term:
                            a
              false branch:
                compound statement (empty)
            if statement
              condition:
                relational
                  term:
                    multiplicative
                      term:
                          a
                      op: *
                      term:
                          b
                  op: >
                  term:
                      c
              true branch:
                compound statement
                  assignment
                    term:
                        r
                    op: +=
                    term:
                      postfix expression
                        expression
                            sin
                        op: (
                        (
                            b
                        )
              false branch:
                compound statement
                  assignment
                    term:
                        r
                    op: =
                    term:
                        c
              return statement
  Declaration: binary_ops
      Function: binary_ops
        Parameters:
          parameter:
            passing style: inout
            declaration:
              Object: name a, type double
          parameter:
            passing style: in
            declaration:
              Object: name b, type double
          parameter:
            passing style: in
            declaration:
              Object: name c, type double
        Body:
          compound statement
            assignment
              term:
                  a
              op: -=
              term:
                additive
                  term:
                    multiplicative
                      term:
                          b
                      op: *
                      term:
                          c
                  op: +
                  term:
                      (
                        shift
                          term:
                              1
                          op: <<
                          term:
                              2
                      )
              Declaration: test
                Object: name test, type bool
                  Initializer:
                    logical-or
                      term:
                        logical-and
                          term:
                            relational
                              term:
                                  a
                              op: <=
                              term:
                                  b
                              op: <
                              term:
                                  c
                          op: &&
                          term:
                              true
                      op: ||
                      term:
                          false
              Declaration: x
                Object: name x, type _
                  Initializer:
                    bit-and
                      term:
                          1
                      op: &
                      term:
                          2
              Declaration: y
                Object: name y, type _
                  Initializer:
                    bit-xor
                      term:
                          3
                      op: ^
                      term:
                          4
              Declaration: z
                Object: name z, type _
                  Initializer:
                    bit-or
                      term:
                          5
                      op: |
                      term:
                          6
  Declaration: prefix
      Function: prefix
        Body:
          compound statement
              Declaration: a
                Object: name a, type _
                  Initializer:
                    prefix expression
                      op: -
                      expression
                          1
              Declaration: b
                Object: name b, type _
                  Initializer:
                    prefix expression
                      op: +
                      expression
                          2
            statement parameters: 
              parameter:
                passing style: in
                declaration:
                  Object: name local, type _
                    Initializer:
                      additive
                        term:
                            a
                        op: -
                        term:
                            b
            if statement
              condition:
                prefix expression
                  op: !
                  expression
                      true
              true branch:
                compound statement
                    return statement
                      expression
                          local
              false branch:
                compound statement (empty)
              return statement
                expression
                  additive
                    term:
                        a
                    op: +
                    term:
                        b
  Declaration: postfix
      Function: postfix
        Parameters:
          parameter:
            passing style: inout
            declaration:
              Object: name a, type double
        Body:
          compound statement
              Declaration: ptr
                Object: name ptr, type _
                  Initializer:
                    postfix expression
                      expression
                          a
                      op: &
            postfix expression
              expression
                  ptr
              op: *
              op: ++
              op: --
  Declaration: qualified_ids
      Function: qualified_ids
        Body:
          compound statement
              Declaration: v
                Object: name v, type std::vector<int>
                  Initializer:
                      (
                          1
                          2
                          3
                      )
              return statement
                expression
                  postfix expression
                    expression
                        v
                    op: .
                      ssize
                    op: (
                    ()
  Declaration: loops
      Function: loops
        Body:
          compound statement
              Declaration: v
                Object: name v, type std::vector
                  Initializer:
                      (
                          1
                          2
                          3
                      )
            statement parameters: 
              parameter:
                passing style: copy
                declaration:
                  Object: name index, type _
                    Initializer:
                        1
              for loop:
                range:
                    v
                parameter:
                  parameter:
                    passing style: in
                    declaration:
                      Object: name value, type _
                body:
                  compound statement
                    shift
                      term:
                          std::cout
                      op: <<
                      term:
                        additive
                          term:
                              ""
                          op: +
                          term:
                            postfix expression
                              expression
                                  cpp2::to_string
                              op: (
                              (
                                  index
                              )
                          op: +
                          term:
                              " "
                          op: +
                          term:
                            postfix expression
                              expression
                                  cpp2::to_string
                              op: (
                              (
                                  value
                              )
                          op: +
                          term:
                              "\n"
              Declaration: i
                Object: name i, type _
                  Initializer:
                      0
              while loop:
                condition:
                  relational
                    term:
                        i
                    op: <
                    term:
                        3
                body:
                  compound statement
                    shift
                      term:
                          std::cout
                      op: <<
                      term:
                          i
                      op: <<
                      term:
                          "\n"
                next expression:
                  assignment
                    term:
                        i
                    op: +=
                    term:
                        1
              do loop:
                condition:
                    false
                body:
                  compound statement
                    shift
                      term:
                          std::cout
                      op: <<
                      term:
                          "plugh\n"
 ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-function-multiple-forward-arguments.cpp2
pure2-function-multiple-forward-arguments.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-function-single-expression-body-default-return.cpp2
pure2-function-single-expression-body-default-return.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-function-typeids.cpp2
pure2-function-typeids.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-hashable.cpp2
pure2-hashable.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-hello.cpp2
pure2-hello.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-initialization-loop-2-error.cpp2
pure2-initialization-loop-2-error.cpp2...
pure2-initialization-loop-2-error.cpp2(6,13): error: local variable i cannot be initialized inside a loop
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing pure2-initialization-loop-error.cpp2
pure2-initialization-loop-error.cpp2...
pure2-initialization-loop-error.cpp2(5,9): error: local variable i cannot be initialized inside a loop
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing pure2-initialization-safety-with-else-if.cpp2
pure2-initialization-safety-with-else-if.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-inspect-expression-in-generic-function-multiple-types.cpp2
pure2-inspect-expression-in-generic-function-multiple-types.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-inspect-expression-in-generic-function-multiple-types.cpp2:22:17: error: no member named 'setw' in namespace 'std'
   22 |         << std::setw(30) << msg 
      |            ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-inspect-expression-with-as-in-generic-function.cpp2
pure2-inspect-expression-with-as-in-generic-function.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-inspect-expression-with-as-in-generic-function.cpp2:9:17: error: no member named 'setw' in namespace 'std'
    9 |         << std::setw(30) << cpp2::to_string(x) 
      |            ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-inspect-fallback-with-variant-any-optional.cpp2
pure2-inspect-fallback-with-variant-any-optional.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-inspect-generic-void-empty-with-variant-any-optional.cpp2
pure2-inspect-generic-void-empty-with-variant-any-optional.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-interpolation.cpp2
pure2-interpolation.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-interpolation.cpp2:26:40: error: no member named 'setw' in namespace 'std'
   26 |         std::cout << std::left << std::setw(20) << CPP2_UFCS(name)(x) << " color " << std::left << std::setw(10) << CPP2_UFCS(color)(x) << " price " << std::setw(10) << std::setprecision(3) << CPP2_UFCS(price)(x) << " in stock = " << std::boolalpha << (cpp2::impl::cmp_greater(CPP2_UFCS(count)(x),0)) << "\n";
      |                                   ~~~~~^
pure2-interpolation.cpp2:26:105: error: no member named 'setw' in namespace 'std'
   26 |         std::cout << std::left << std::setw(20) << CPP2_UFCS(name)(x) << " color " << std::left << std::setw(10) << CPP2_UFCS(color)(x) << " price " << std::setw(10) << std::setprecision(3) << CPP2_UFCS(price)(x) << " in stock = " << std::boolalpha << (cpp2::impl::cmp_greater(CPP2_UFCS(count)(x),0)) << "\n";
      |                                                                                                    ~~~~~^
pure2-interpolation.cpp2:26:158: error: no member named 'setw' in namespace 'std'
   26 |         std::cout << std::left << std::setw(20) << CPP2_UFCS(name)(x) << " color " << std::left << std::setw(10) << CPP2_UFCS(color)(x) << " price " << std::setw(10) << std::setprecision(3) << CPP2_UFCS(price)(x) << " in stock = " << std::boolalpha << (cpp2::impl::cmp_greater(CPP2_UFCS(count)(x),0)) << "\n";
      |                                                                                                                                                         ~~~~~^
pure2-interpolation.cpp2:26:175: error: no member named 'setprecision' in namespace 'std'
   26 |         std::cout << std::left << std::setw(20) << CPP2_UFCS(name)(x) << " color " << std::left << std::setw(10) << CPP2_UFCS(color)(x) << " price " << std::setw(10) << std::setprecision(3) << CPP2_UFCS(price)(x) << " in stock = " << std::boolalpha << (cpp2::impl::cmp_greater(CPP2_UFCS(count)(x),0)) << "\n";
      |                                                                                                                                                                          ~~~~~^
pure2-interpolation.cpp2:31:18: error: no viable constructor or deduction guide for deduction of template arguments of 'std::complex'
   31 |     std::complex ri {1.2, 3.4}; 
      |                  ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/c++/v1/__fwd/complex.h:22:28: note: candidate function template not viable: requires 1 argument, but 2 were provided
   22 | class _LIBCPP_TEMPLATE_VIS complex;
      |                            ^~~~~~~
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/c++/v1/__fwd/complex.h:22:28: note: implicit deduction guide declared as 'template <class _Tp> complex(complex<_Tp>) -> complex<_Tp>'
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/c++/v1/__fwd/complex.h:22:28: note: candidate function template not viable: requires 0 arguments, but 2 were provided
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.5.sdk/usr/include/c++/v1/__fwd/complex.h:22:28: note: implicit deduction guide declared as 'template <class _Tp> complex() -> complex<_Tp>'
5 errors generated.
  Compile FAILED

Testing pure2-intro-example-hello-2022.cpp2
pure2-intro-example-hello-2022.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-intro-example-three-loops.cpp2
pure2-intro-example-three-loops.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-intro-example-three-loops.cpp2:22:27: error: no member named 'setw' in namespace 'std'
   22 |         std::cout << std::setw(4) << "**";
      |                      ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-is-with-free-functions-predicate.cpp2
pure2-is-with-free-functions-predicate.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-is-with-polymorphic-types.cpp2
pure2-is-with-polymorphic-types.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-is-with-unnamed-predicates.cpp2
pure2-is-with-unnamed-predicates.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-is-with-variable-and-value.cpp2
pure2-is-with-variable-and-value.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-last-use.cpp2
pure2-last-use.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-last-use.cpp2:273:36: error: expected variable name or 'this' in lambda capture list
  273 |    public: std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> g; 
      |                                    ^
pure2-last-use.cpp2:329:2: error: expected '>'
  329 | };
      |  ^
pure2-last-use.cpp2:273:30: note: to match this '<'
  273 |    public: std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> g; 
      |                              ^
pure2-last-use.cpp2:344:16: error: no template named 'move_only_function' in namespace 'std'
  344 |   public: std::move_only_function<int()> b; 
      |           ~~~~~^
pure2-last-use.cpp2:348:161: error: no member named 'move_only_function' in namespace 'std'
  348 | CPP2_REQUIRES_ (std::is_convertible_v<CPP2_TYPEOF(a_), std::add_const_t<std::unique_ptr<int>>&> && std::is_convertible_v<CPP2_TYPEOF(b_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(c_), std::add_const_t<std::add_lvalue_reference_t<int>>&>) ;
      |                                                                                                                                                            ~~~~~^
../../stage0_clean/include/cpp2util.h:10109:43: note: expanded from macro 'CPP2_REQUIRES_'
 10109 |     #define CPP2_REQUIRES_(...) requires (__VA_ARGS__)
       |                                           ^~~~~~~~~~~
pure2-last-use.cpp2:348:188: error: expected expression
  348 | CPP2_REQUIRES_ (std::is_convertible_v<CPP2_TYPEOF(a_), std::add_const_t<std::unique_ptr<int>>&> && std::is_convertible_v<CPP2_TYPEOF(b_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(c_), std::add_const_t<std::add_lvalue_reference_t<int>>&>) ;
      |                                                                                                                                                                                            ^
pure2-last-use.cpp2:348:193: error: use of address-of-label extension outside of a function body
  348 | CPP2_REQUIRES_ (std::is_convertible_v<CPP2_TYPEOF(a_), std::add_const_t<std::unique_ptr<int>>&> && std::is_convertible_v<CPP2_TYPEOF(b_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(c_), std::add_const_t<std::add_lvalue_reference_t<int>>&>) ;
      |                                                                                                                                                                                                 ^
pure2-last-use.cpp2:773:69: error: no template named 'move_only_function' in namespace 'std'
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                ~~~~~^
pure2-last-use.cpp2:773:93: error: expected variable name or 'this' in lambda capture list
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                                             ^
pure2-last-use.cpp2:773:156: error: expected unqualified-id
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                                                                                                            ^
pure2-last-use.cpp2:773:160: error: expected '>'
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                                                                                                                ^
pure2-last-use.cpp2:773:87: note: to match this '<'
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                                       ^
pure2-last-use.cpp2:773:160: error: expected ')'
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                                                                                                                                                                ^
pure2-last-use.cpp2:773:17: note: to match this '('
  773 | auto issue_888_1([[maybe_unused]] std::string unnamed_param_1, std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)> size) -> void;
      |                 ^
pure2-last-use.cpp2:271:7: error: missing '}' at end of definition of 'issue_857_4'
  271 | class issue_857_4 {
      |       ^
pure2-last-use.cpp2:905:1: note: still within definition of 'issue_857_4' here
  905 | namespace captures {
      | ^
pure2-last-use.cpp2:279:179: error: expected variable name or 'this' in lambda capture list
  279 | requires (std::is_convertible_v<CPP2_TYPEOF(f_), std::add_const_t<std::add_pointer_t<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(g_), std::add_const_t<std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&> && std::is_convertible_v<CPP2_TYPEOF(mf_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(mg_), std::add_const_t<std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&>) 
      |                                                                                                                                                                                   ^
pure2-last-use.cpp2:1044:2: error: expected '>'
 1044 | }
      |  ^
pure2-last-use.cpp2:279:173: note: to match this '<'
  279 | requires (std::is_convertible_v<CPP2_TYPEOF(f_), std::add_const_t<std::add_pointer_t<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(g_), std::add_const_t<std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&> && std::is_convertible_v<CPP2_TYPEOF(mf_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(mg_), std::add_const_t<std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&>) 
      |                                                                                                                                                                             ^
pure2-last-use.cpp2:1045:1: error: type name requires a specifier or qualifier
 1045 | 
      | ^
pure2-last-use.cpp2:1044:2: error: expected '>'
 1044 | }
      |  ^
pure2-last-use.cpp2:279:154: note: to match this '<'
  279 | requires (std::is_convertible_v<CPP2_TYPEOF(f_), std::add_const_t<std::add_pointer_t<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(g_), std::add_const_t<std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&> && std::is_convertible_v<CPP2_TYPEOF(mf_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(mg_), std::add_const_t<std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&>) 
      |                                                                                                                                                          ^
pure2-last-use.cpp2:1045:1: error: type name requires a specifier or qualifier
 1045 | 
      | ^
pure2-last-use.cpp2:1044:2: error: expected '>'
 1044 | }
      |  ^
pure2-last-use.cpp2:279:120: note: to match this '<'
  279 | requires (std::is_convertible_v<CPP2_TYPEOF(f_), std::add_const_t<std::add_pointer_t<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(g_), std::add_const_t<std::add_pointer_t<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&> && std::is_convertible_v<CPP2_TYPEOF(mf_), std::add_const_t<std::move_only_function<int()>>&> && std::is_convertible_v<CPP2_TYPEOF(mg_), std::add_const_t<std::move_only_function<int([[maybe_unused]] cpp2::impl::in<int> unnamed_param_1)>>&>) 
      |                                                                                                                        ^
pure2-last-use.cpp2:1045:1: error: expected function body after function declarator
 1045 | 
      | ^
19 errors generated.
  Compile FAILED

Testing pure2-lifetime-safety-pointer-init-1-error.cpp2
pure2-lifetime-safety-pointer-init-1-error.cpp2...
pure2-lifetime-safety-pointer-init-1-error.cpp2(14,25): error: local variable p is used before it was initialized
  ==> program violates initialization safety guarantee - see previous errors

  Transpile FAILED

Testing pure2-lifetime-safety-reject-null-error.cpp2
pure2-lifetime-safety-reject-null-error.cpp2...
pure2-lifetime-safety-reject-null-error.cpp2(10,15): error: pointer cannot be initialized to null or int - leave it uninitialized and then set it to a non-null value when you have one (at 'nullptr')
pure2-lifetime-safety-reject-null-error.cpp2: error: null initialization detected
  ==> program violates lifetime safety guarantee - see previous errors

  Transpile FAILED

Testing pure2-look-up-parameter-across-unnamed-function.cpp2
pure2-look-up-parameter-across-unnamed-function.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-main-args.cpp2
pure2-main-args.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-main-args.cpp2:6:58: error: no member named 'filesystem' in namespace 'std'
    6 |     auto exe {CPP2_UFCS(string)(CPP2_UFCS(filename)(std::filesystem::path(CPP2_ASSERT_IN_BOUNDS_LITERAL(args.argv, 0))))}; 
      |                                                     ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-more-wildcards.cpp2
pure2-more-wildcards.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-print.cpp2
pure2-print.cpp2...

outer:/* @print */ type = 
{
    object_alias: <T: type, > T requires (true) == 42;
    mytype: final type = 
    {
        protected f:() -> move int = 42;

        g:(
            virtual in this, 
            in i: int, 
        ) -> move int = 
        {
            using namespace ::std;
            s: _ = "string literal";
            ret: int = i;
            p: const * const int = ret&;
            if p* < 0
            {
                ret = -p*;
            }
            ret += strlen(s) - 10 + s.strlen() * (16 / (3 & 2)) % 3;
            m: map<const int, string> = ();
            m[0] = "har" as string;
            ret -= h("x", m).length();
            _ = m;
            return ret;
        }

        private h:(
            in s: std::string, 
            inout m: std::map<const int, std::string>, 
        ) -> move std::string
            pre( m.empty() == false || false, "message" )
            pre<bounds_safety,testing_enabled>( 0 < m.ssize() < 100 && true != false, "size is " + cpp2::to_string(m.ssize()) + "" ) = 
        {
            a: _ = :() = 
                {
                };
            b: _ = :() = 
                {
                };
            c: _ = :() = 
                {
                };
            while s.empty()
            next a()
                {
                    break;
                }
            do 
                {
                }
            next b()
            while s.empty();
            label: for m
            next c()
            do (in _: _)
                {
                    continue label;
                }
            if !s.empty() is (true)
            {
                a();
            }
            else 
            {
                if !m.empty()
                {
                    b();
                }
                else 
                {
                    c();
                }
            }
            assert( true );
            return :() -> move std::string = (s + m[0])$;();
        }

        values: <T: type, >(
            in this, 
            in _: T, 
        ) throws -> (
                out offset: int, 
                out name: std::string, 
            ) = 
        {
            offset = 53;
            name = "plugh";
            return;
        }

        operator=:(out this, ) = 
        {
        }

        operator=:(
            out this, 
            in that, 
        ) = 
        {
        }

        operator=:(
            implicit out this, 
            in _: int, 
        ) = 
        {
        }

        variadic:(in x...: int, ) = 
        {
            (std::cout << ... << x);
        }
    }

    test:() = 
    {
        namespace_alias: namespace == ::std;
        using std::array;
        using std::cout;
        type_alias: type == array<int, 10>;
        object_alias_1: i8 == 42;
        object_alias_2: == 42;
        object_alias_3: std::array == (4, 5, 6);
        var: ::outer::mytype = ();
        cout << var.g(42) << "\n";
        cout << inspect var.g(42) -> namespace_alias::string {
            is 43 = "forty-and-three";
            is _ = "default case";
        } << "\n";
    }
    x: <Ts...: type, > type = 
    {
        tup: std::tuple<Ts...> = ();
    }

    print: <Args...: type, >(
        inout out: std::ostream, 
        in args...: Args, 
    ) requires (sizeof...(Args) >= 0u) = 
    {
        (out << ... << args);
    }

    all: <Args...: type, >(in args...: Args, ) -> move bool = (... && args);

    y:(in _: type_of(0), ) = 
    {
    }
}
 ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-range-operators.cpp2
pure2-range-operators.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-range-operators.cpp2:21:10: error: no type named 'list' in namespace 'std'
   21 |     std::list all_about {
      |     ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-raw-string-literal-and-interpolation.cpp2
pure2-raw-string-literal-and-interpolation.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_01_char_matcher.cpp2
pure2-regex_01_char_matcher.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_02_ranges.cpp2
pure2-regex_02_ranges.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_03_wildcard.cpp2
pure2-regex_03_wildcard.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_04_start_end.cpp2
pure2-regex_04_start_end.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_05_classes.cpp2
pure2-regex_05_classes.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_06_boundaries.cpp2
pure2-regex_06_boundaries.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_07_short_classes.cpp2
pure2-regex_07_short_classes.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_08_alternatives.cpp2
pure2-regex_08_alternatives.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_09_groups.cpp2
pure2-regex_09_groups.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_10_escapes.cpp2
pure2-regex_10_escapes.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_11_group_references.cpp2
pure2-regex_11_group_references.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_12_case_insensitive.cpp2
pure2-regex_12_case_insensitive.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_13_possessive_modifier.cpp2
pure2-regex_13_possessive_modifier.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_14_multiline_modifier.cpp2
pure2-regex_14_multiline_modifier.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_15_group_modifiers.cpp2
pure2-regex_15_group_modifiers.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_16_perl_syntax_modifier.cpp2
pure2-regex_16_perl_syntax_modifier.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_17_comments.cpp2
pure2-regex_17_comments.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_18_branch_reset.cpp2
pure2-regex_18_branch_reset.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_19_lookahead.cpp2
pure2-regex_19_lookahead.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex_21_atomic_patterns.cpp2
pure2-regex_21_atomic_patterns.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-regex-general.cpp2
pure2-regex-general.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-repeated-call.cpp2
pure2-repeated-call.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-requires-clauses.cpp2
pure2-requires-clauses.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-return-tuple-no-identifier-error.cpp2
pure2-return-tuple-no-identifier-error.cpp2...
pure2-return-tuple-no-identifier-error.cpp2(1,11): error: expected identifier, not 'int'
pure2-return-tuple-no-identifier-error.cpp2(1,14): error: missing function return after -> (at ',')

  Transpile FAILED

Testing pure2-return-tuple-no-type-error.cpp2
pure2-return-tuple-no-type-error.cpp2...
pure2-return-tuple-no-type-error.cpp2(1,11): error: return parameter 'a' must have a type
pure2-return-tuple-no-type-error.cpp2(1,12): error: missing function return after -> (at ',')

  Transpile FAILED

Testing pure2-return-tuple-operator.cpp2
pure2-return-tuple-operator.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-statement-parse-error.cpp2
pure2-statement-parse-error.cpp2...
pure2-statement-parse-error.cpp2(3,5): error: invalid statement encountered inside a compound-statement (at 'int')

  Transpile FAILED

Testing pure2-statement-scope-parameters.cpp2
pure2-statement-scope-parameters.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-stdio-with-raii.cpp2
pure2-stdio-with-raii.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-stdio.cpp2
pure2-stdio.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-synthesize-rightshift-and-rightshifteq.cpp2
pure2-synthesize-rightshift-and-rightshifteq.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-template-parameter-lists.cpp2
pure2-template-parameter-lists.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-trailing-comma-assert.cpp2
pure2-trailing-comma-assert.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-trailing-commas.cpp2
pure2-trailing-commas.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-type-and-namespace-aliases.cpp2
pure2-type-and-namespace-aliases.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-type-constraints.cpp2
pure2-type-constraints.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-type-safety-1.cpp2
pure2-type-safety-1.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-type-safety-1.cpp2:67:23: error: no member named 'setw' in namespace 'std'
   67 |     std::cout << std::setw(40) << msg << cpp2::move(bmsg.value()) << "\n";
      |                  ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-type-safety-2-with-inspect-expression.cpp2
pure2-type-safety-2-with-inspect-expression.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
pure2-type-safety-2-with-inspect-expression.cpp2:22:17: error: no member named 'setw' in namespace 'std'
   22 |         << std::setw(30) << msg 
      |            ~~~~~^
1 error generated.
  Compile FAILED

Testing pure2-types-basics.cpp2
pure2-types-basics.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-down-upcast.cpp2
pure2-types-down-upcast.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-inheritance.cpp2
pure2-types-inheritance.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-order-independence-and-nesting.cpp2
pure2-types-order-independence-and-nesting.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-ordering-via-meta-functions.cpp2
pure2-types-ordering-via-meta-functions.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-smf-and-that-1-provide-everything.cpp2
pure2-types-smf-and-that-1-provide-everything.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-smf-and-that-2-provide-mvconstruct-and-cpassign.cpp2
pure2-types-smf-and-that-2-provide-mvconstruct-and-cpassign.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-smf-and-that-3-provide-mvconstruct-and-mvassign.cpp2
pure2-types-smf-and-that-3-provide-mvconstruct-and-mvassign.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-smf-and-that-4-provide-cpassign-and-mvassign.cpp2
pure2-types-smf-and-that-4-provide-cpassign-and-mvassign.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-smf-and-that-5-provide-nothing-but-general-case.cpp2
pure2-types-smf-and-that-5-provide-nothing-but-general-case.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-that-parameters.cpp2
pure2-types-that-parameters.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-types-value-types-via-meta-functions.cpp2
pure2-types-value-types-via-meta-functions.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-ufcs-member-access-and-chaining.cpp2
pure2-ufcs-member-access-and-chaining.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-union.cpp2
pure2-union.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-unsafe.cpp2
pure2-unsafe.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-variadics.cpp2
pure2-variadics.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Testing pure2-various-string-literals.cpp2
pure2-various-string-literals.cpp2... ok (all Cpp2, passes safety checks)

  Transpile OK
  Compile OK
  Run OK
  No expected output to compare

Total tests: 185
Failures: 49
